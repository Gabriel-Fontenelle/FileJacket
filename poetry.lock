[[package]]
name = "aggdraw"
version = "1.3.15"
description = "High quality drawing interface for PIL."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "attrs"
version = "22.1.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
dev = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "mypy (>=0.900,!=0.940)", "pytest-mypy-plugins", "zope.interface", "furo", "sphinx", "sphinx-notfound-page", "pre-commit", "cloudpickle"]
docs = ["furo", "sphinx", "zope.interface", "sphinx-notfound-page"]
tests = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "mypy (>=0.900,!=0.940)", "pytest-mypy-plugins", "zope.interface", "cloudpickle"]
tests_no_zope = ["coverage[toml] (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "mypy (>=0.900,!=0.940)", "pytest-mypy-plugins", "cloudpickle"]

[[package]]
name = "av"
version = "9.2.0"
description = "Pythonic bindings for FFmpeg's libraries."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "brotli"
version = "1.0.9"
description = "Python bindings for the Brotli compression library"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "brotlicffi"
version = "1.0.9.2"
description = "Python CFFI bindings to the Brotli library"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
cffi = ">=1.0.0"

[[package]]
name = "certifi"
version = "2022.9.24"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cffi"
version = "1.15.1"
description = "Foreign Function Interface for Python calling C code."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pycparser = "*"

[[package]]
name = "charset-normalizer"
version = "2.0.12"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.5.0"

[package.extras]
unicode_backport = ["unicodedata2"]

[[package]]
name = "colorama"
version = "0.4.5"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "contextlib2"
version = "21.6.0"
description = "Backports and enhancements for the contextlib module"
category = "dev"
optional = false
python-versions = ">=3.6"

[[package]]
name = "decorator"
version = "4.4.2"
description = "Decorators for Humans"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*"

[[package]]
name = "dill"
version = "0.3.5.1"
description = "serialize all of python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*"

[package.extras]
graph = ["objgraph (>=1.7.2)"]

[[package]]
name = "distlib"
version = "0.3.6"
description = "Distribution utilities"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "docopt"
version = "0.6.2"
description = "Pythonic argument parser, that will make you smile"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "execnet"
version = "1.9.0"
description = "execnet: rapid multi-Python deployment"
category = "dev"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.extras]
testing = ["pre-commit"]

[[package]]
name = "filelock"
version = "3.8.0"
description = "A platform independent file lock."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo (>=2022.6.21)", "sphinx (>=5.1.1)", "sphinx-autodoc-typehints (>=1.19.1)"]
testing = ["covdefaults (>=2.2)", "coverage (>=6.4.2)", "pytest (>=7.1.2)", "pytest-cov (>=3)", "pytest-timeout (>=2.1)"]

[[package]]
name = "idna"
version = "3.4"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "imageio"
version = "2.22.1"
description = "Library for reading and writing a wide range of image, video, scientific, and volumetric data formats."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = "*"
pillow = ">=8.3.2"

[package.extras]
all-plugins = ["astropy", "av", "imageio-ffmpeg", "opencv-python", "psutil", "tifffile"]
all-plugins-pypy = ["av", "imageio-ffmpeg", "psutil", "tifffile"]
build = ["wheel"]
dev = ["invoke", "pytest", "pytest-cov", "fsspec", "black", "flake8"]
docs = ["sphinx", "numpydoc", "pydata-sphinx-theme"]
ffmpeg = ["imageio-ffmpeg", "psutil"]
fits = ["astropy"]
full = ["astropy", "av", "black", "flake8", "fsspec", "gdal", "imageio-ffmpeg", "invoke", "itk", "numpydoc", "opencv-python", "psutil", "pydata-sphinx-theme", "pytest", "pytest-cov", "sphinx", "tifffile", "wheel"]
gdal = ["gdal"]
itk = ["itk"]
linting = ["black", "flake8"]
opencv = ["opencv-python"]
pyav = ["av"]
test = ["invoke", "pytest", "pytest-cov", "fsspec"]
tifffile = ["tifffile"]

[[package]]
name = "imageio-ffmpeg"
version = "0.4.7"
description = "FFMPEG wrapper for Python"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "inflate64"
version = "0.3.0"
description = "deflate64 compression/decompression library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pyannotate", "pytest"]
docs = ["docutils", "sphinx (>=5.0)"]
check = ["twine", "readme-renderer", "pygments", "isort (>=5.0.3)", "flake8-deprecated", "flake8-black", "flake8", "check-manifest", "mypy-extensions (>=0.4.1)", "mypy (>=0.940)"]

[[package]]
name = "iniconfig"
version = "1.1.1"
description = "iniconfig: brain-dead simple config-ini parsing"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "json-tricks"
version = "3.15.5"
description = "Extra features for Python's JSON: comments, order, numpy, pandas, datetimes, and many more! Simple but customizable."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "mock"
version = "4.0.3"
description = "Rolling backport of unittest.mock for all Pythons"
category = "dev"
optional = false
python-versions = ">=3.6"

[package.extras]
build = ["twine", "wheel", "blurb"]
docs = ["sphinx"]
test = ["pytest (<5.4)", "pytest-cov"]

[[package]]
name = "moviepy"
version = "1.0.3"
description = "Video editing with Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
decorator = ">=4.0.2,<5.0"
imageio = {version = ">=2.5,<3.0", markers = "python_version >= \"3.4\""}
imageio_ffmpeg = {version = ">=0.2.0", markers = "python_version >= \"3.4\""}
numpy = [
    {version = ">=1.17.3", markers = "python_version != \"2.7\""},
    {version = "*", markers = "python_version >= \"2.7\""},
]
proglog = "<=1.0.0"
requests = ">=2.8.1,<3.0"
tqdm = ">=4.11.2,<5.0"

[package.extras]
doc = ["numpydoc (>=0.6.0,<1.0)", "sphinx_rtd_theme (>=0.1.10b0,<1.0)", "Sphinx (>=1.5.2,<2.0)", "pygame (>=1.9.3,<2.0)"]
optional = ["youtube-dl", "opencv-python (>=3.0,<4.0)", "scipy (>=0.19.0,<1.5)", "scikit-image (>=0.13.0,<1.0)", "scikit-learn", "matplotlib (>=2.0.0,<3.0)"]
test = ["coverage (<5.0)", "coveralls (>=1.1,<2.0)", "pytest-cov (>=2.5.1,<3.0)", "pytest (>=3.0.0,<4.0)", "requests (>=2.8.1,<3.0)"]

[[package]]
name = "multivolumefile"
version = "0.2.3"
description = "multi volume file wrapper library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
type = ["mypy-extensions", "mypy"]
test = ["hypothesis", "coveralls (>=2.1.1)", "coverage[toml] (>=5.2)", "pyannotate", "pytest-cov", "pytest"]
check = ["twine", "isort (>=5.0.3)", "pygments", "readme-renderer", "flake8-black", "flake8", "check-manifest"]

[[package]]
name = "networkx"
version = "2.8.7"
description = "Python package for creating and manipulating graphs and networks"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
default = ["numpy (>=1.19)", "scipy (>=1.8)", "matplotlib (>=3.4)", "pandas (>=1.3)"]
developer = ["pre-commit (>=2.20)", "mypy (>=0.981)"]
doc = ["sphinx (>=5)", "pydata-sphinx-theme (>=0.9)", "sphinx-gallery (>=0.10)", "numpydoc (>=1.4)", "pillow (>=9.1)", "nb2plots (>=0.6)", "texext (>=0.6.6)"]
extra = ["lxml (>=4.6)", "pygraphviz (>=1.9)", "pydot (>=1.4.2)", "sympy (>=1.10)"]
test = ["pytest (>=7.1)", "pytest-cov (>=3.0)", "codecov (>=2.1)"]

[[package]]
name = "numpy"
version = "1.23.3"
description = "NumPy is the fundamental package for array computing with Python."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "opencv-python"
version = "4.6.0.66"
description = "Wrapper package for OpenCV python bindings."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
numpy = [
    {version = ">=1.21.2", markers = "python_version >= \"3.10\" or python_version >= \"3.6\" and platform_system == \"Darwin\" and platform_machine == \"arm64\""},
    {version = ">=1.19.3", markers = "python_version >= \"3.6\" and platform_system == \"Linux\" and platform_machine == \"aarch64\" or python_version >= \"3.9\""},
    {version = ">=1.14.5", markers = "python_version >= \"3.7\""},
    {version = ">=1.17.3", markers = "python_version >= \"3.8\""},
]

[[package]]
name = "packaging"
version = "21.3"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyparsing = ">=2.0.2,<3.0.5 || >3.0.5"

[[package]]
name = "path"
version = "16.5.0"
description = "A module wrapper for os.path"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx (>=3.5)", "jaraco.packaging (>=9)", "rst.linker (>=1.9)", "jaraco.tidelift (>=1.4)"]
testing = ["pytest (>=6)", "pytest-checkdocs (>=2.4)", "pytest-flake8", "flake8 (<5)", "pytest-cov", "pytest-enabler (>=1.3)", "appdirs", "packaging", "pygments", "pytest-black (>=0.3.7)", "pytest-mypy (>=0.9.1)", "pywin32"]

[[package]]
name = "path.py"
version = "12.5.0"
description = "A module wrapper for os.path"
category = "dev"
optional = false
python-versions = ">=3.5"

[package.dependencies]
path = "*"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=3.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=3.5,!=3.7.3)", "pytest-checkdocs (>=1.2.3)", "pytest-flake8", "pytest-black-multipy", "pytest-cov", "appdirs", "packaging", "pygments"]

[[package]]
name = "pillow"
version = "9.2.0"
description = "Python Imaging Library (Fork)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo", "olefile", "sphinx (>=2.4)", "sphinx-copybutton", "sphinx-issues (>=3.0.1)", "sphinx-removed-in", "sphinxext-opengraph"]
tests = ["check-manifest", "coverage", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout"]

[[package]]
name = "platformdirs"
version = "2.5.2"
description = "A small Python module for determining appropriate platform-specific dirs, e.g. a \"user data dir\"."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["furo (>=2021.7.5b38)", "proselint (>=0.10.2)", "sphinx-autodoc-typehints (>=1.12)", "sphinx (>=4)"]
test = ["appdirs (==1.4.4)", "pytest-cov (>=2.7)", "pytest-mock (>=3.6)", "pytest (>=6)"]

[[package]]
name = "pluggy"
version = "1.0.0"
description = "plugin and hook calling mechanisms for python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
testing = ["pytest-benchmark", "pytest"]
dev = ["tox", "pre-commit"]

[[package]]
name = "proglog"
version = "0.1.10"
description = "Log and progress bar manager for console, notebooks, web..."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
tqdm = "*"

[[package]]
name = "psd-tools"
version = "1.9.23"
description = "Python package for working with Adobe Photoshop PSD files"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
aggdraw = "*"
attrs = ">=19.2.0"
docopt = ">=0.5"
numpy = "*"
Pillow = ">=6.2.0"
scikit-image = "*"
scipy = "*"

[[package]]
name = "psutil"
version = "5.9.2"
description = "Cross-platform lib for process and system monitoring in Python."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.extras]
test = ["ipaddress", "mock", "enum34", "pywin32", "wmi"]

[[package]]
name = "py"
version = "1.11.0"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "py7zr"
version = "0.20.0"
description = "Pure python 7-zip library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
brotli = {version = ">=1.0.9", markers = "platform_python_implementation == \"CPython\""}
brotlicffi = {version = ">=1.0.9.2", markers = "platform_python_implementation == \"PyPy\""}
inflate64 = {version = ">=0.3.0", markers = "python_version > \"3.6\""}
multivolumefile = ">=0.2.3"
psutil = "*"
pybcj = ">=0.6.0"
pycryptodomex = ">=3.6.6"
pyppmd = ">=0.18.1,<0.19.0"
pyzstd = ">=0.14.4"
texttable = "*"

[package.extras]
check = ["mypy (>=0.940)", "mypy-extensions (>=0.4.1)", "check-manifest", "flake8", "flake8-black", "flake8-deprecated", "isort (>=5.0.3)", "pygments", "readme-renderer", "twine"]
debug = ["pytest", "pytest-leaks", "pytest-profiling"]
docs = ["sphinx (>=5.0)", "sphinx-py3doc-enhanced-theme", "sphinx-a4doc", "docutils"]
test = ["pytest", "pytest-benchmark", "pytest-cov", "pytest-remotedata", "pytest-timeout", "pyannotate", "py-cpuinfo", "coverage[toml] (>=5.2)", "coveralls (>=2.1.1)"]
test_compat = ["libarchive-c"]

[[package]]
name = "pybcj"
version = "1.0.1"
description = "bcj filter library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
test = ["coverage[toml] (>=5.2)", "hypothesis", "pytest-cov", "pytest (>=6.0)"]
check = ["pygments", "readme-renderer", "flake8-typing-imports", "flake8-pyi", "flake8-isort", "flake8-colors", "flake8-black", "flake8 (<5)", "check-manifest", "mypy-extensions (>=0.4.3)", "mypy (>=0.812)"]

[[package]]
name = "pycparser"
version = "2.21"
description = "C parser in Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pycryptodomex"
version = "3.15.0"
description = "Cryptographic library for Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pymupdf"
version = "1.20.2"
description = "Python bindings for the PDF toolkit and renderer MuPDF"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pyparsing"
version = "3.0.9"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "main"
optional = false
python-versions = ">=3.6.8"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "pypdf2"
version = "2.11.0"
description = "A pure-python PDF library capable of splitting, merging, cropping, and transforming PDF files"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
typing-extensions = {version = ">=3.10.0.0", markers = "python_version < \"3.10\""}

[package.extras]
crypto = ["pycryptodome"]

[[package]]
name = "pyppmd"
version = "0.18.3"
description = "PPMd compression/decompression library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
check = ["mypy (>=0.812)", "mypy-extensions (>=0.4.3)", "check-manifest", "flake8", "flake8-black", "readme-renderer", "pygments", "isort (>=5.0.3)"]
docs = ["sphinx (>=2.3)", "sphinx-rtd-theme"]
fuzzer = ["atheris", "hypothesis"]
test = ["pytest (>=6.0)", "pytest-benchmark", "pytest-cov", "pytest-timeout", "hypothesis", "coverage[toml] (>=5.2)"]

[[package]]
name = "pyside2"
version = "5.13.2"
description = "Python bindings for the Qt cross-platform application and UI framework"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
shiboken2 = "5.13.2"

[[package]]
name = "pytest"
version = "7.1.3"
description = "pytest: simple powerful testing with Python"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.dependencies]
attrs = ">=19.2.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
py = ">=1.8.2"
tomli = ">=1.0.0"

[package.extras]
testing = ["argcomplete", "hypothesis (>=3.56)", "mock", "nose", "pygments (>=2.7.2)", "requests", "xmlschema"]

[[package]]
name = "pytest-shutil"
version = "1.7.0"
description = "A goodie-bag of unix shell and environment tools for py.test"
category = "dev"
optional = false
python-versions = "*"

[package.dependencies]
contextlib2 = "*"
execnet = "*"
mock = "*"
"path.py" = "*"
pytest = "*"
six = "*"
termcolor = "*"

[package.extras]
tests = ["pytest"]

[[package]]
name = "pywavelets"
version = "1.4.1"
description = "PyWavelets, wavelet transform module"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.17.3"

[[package]]
name = "pyzstd"
version = "0.15.3"
description = "Python bindings to Zstandard (zstd) compression library, the API is similar to Python's bz2/lzma/zlib modules."
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "rarfile"
version = "4.0"
description = "RAR archive reader for Python"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "requests"
version = "2.27.1"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = {version = ">=2.0.0,<2.1.0", markers = "python_version >= \"3\""}
idna = {version = ">=2.5,<4", markers = "python_version >= \"3\""}
urllib3 = ">=1.21.1,<1.27"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)", "win-inet-pton"]
use_chardet_on_py3 = ["chardet (>=3.0.2,<5)"]

[[package]]
name = "scikit-image"
version = "0.19.3"
description = "Image processing in Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
imageio = ">=2.4.1"
networkx = ">=2.2"
numpy = ">=1.17.0"
packaging = ">=20.0"
pillow = ">=6.1.0,<7.1.0 || >7.1.0,<7.1.1 || >7.1.1,<8.3.0 || >8.3.0"
PyWavelets = ">=1.1.1"
scipy = ">=1.4.1"
tifffile = ">=2019.7.26"

[package.extras]
data = ["pooch (>=1.3.0)"]
docs = ["sphinx (>=1.8)", "sphinx-gallery (>=0.10.1)", "numpydoc (>=1.0)", "sphinx-copybutton", "pytest-runner", "scikit-learn", "matplotlib (>=3.3)", "dask[array] (>=0.15.0,!=2.17.0)", "cloudpickle (>=0.2.1)", "pandas (>=0.23.0)", "seaborn (>=0.7.1)", "pooch (>=1.3.0)", "tifffile (>=2020.5.30)", "myst-parser", "ipywidgets", "plotly (>=4.14.0)", "kaleido"]
optional = ["simpleitk", "astropy (>=3.1.2)", "cloudpickle (>=0.2.1)", "dask[array] (>=1.0.0,!=2.17.0)", "matplotlib (>=3.0.3)", "pooch (>=1.3.0)", "pyamg", "qtpy"]
test = ["asv", "codecov", "flake8", "matplotlib (>=3.0.3)", "pooch (>=1.3.0)", "pytest (>=5.2.0)", "pytest-cov (>=2.7.0)", "pytest-localserver", "pytest-faulthandler"]

[[package]]
name = "scipy"
version = "1.6.1"
description = "SciPy: Scientific Library for Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.16.5"

[[package]]
name = "send2trash"
version = "1.8.0"
description = "Send file to trash natively under Mac OS X, Windows and Linux."
category = "main"
optional = false
python-versions = "*"

[package.extras]
nativelib = ["pyobjc-framework-cocoa", "pywin32"]
objc = ["pyobjc-framework-cocoa"]
win32 = ["pywin32"]

[[package]]
name = "shiboken2"
version = "5.13.2"
description = "Python / C++ bindings helper module"
category = "dev"
optional = false
python-versions = "*"

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "termcolor"
version = "2.0.1"
description = "ANSI color formatting for output in terminal"
category = "dev"
optional = false
python-versions = ">=3.7"

[package.extras]
tests = ["pytest-cov", "pytest"]

[[package]]
name = "texttable"
version = "1.6.4"
description = "module for creating simple ASCII tables"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "tifffile"
version = "2022.8.12"
description = "Read and write TIFF files"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = ">=1.19.2"

[package.extras]
all = ["imagecodecs (>=2022.2.22)", "matplotlib (>=3.3)", "lxml"]

[[package]]
name = "tinytag"
version = "1.6.0"
description = "Read music meta data and length of MP3, OGG, OPUS, MP4, M4A, FLAC, WMA and Wave files"
category = "main"
optional = false
python-versions = ">=2.7"

[package.extras]
tests = ["pytest", "pytest-cov", "coveralls", "flake8"]

[[package]]
name = "toml"
version = "0.10.2"
description = "Python Library for Tom's Obvious, Minimal Language"
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "tox"
version = "3.26.0"
description = "tox is a generic virtualenv management and test command line tool"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[package.dependencies]
colorama = {version = ">=0.4.1", markers = "platform_system == \"Windows\""}
filelock = ">=3.0.0"
packaging = ">=14"
pluggy = ">=0.12.0"
py = ">=1.4.17"
six = ">=1.14.0"
tomli = {version = ">=2.0.1", markers = "python_version >= \"3.7\" and python_version < \"3.11\""}
virtualenv = ">=16.0.0,<20.0.0 || >20.0.0,<20.0.1 || >20.0.1,<20.0.2 || >20.0.2,<20.0.3 || >20.0.3,<20.0.4 || >20.0.4,<20.0.5 || >20.0.5,<20.0.6 || >20.0.6,<20.0.7 || >20.0.7"

[package.extras]
docs = ["pygments-github-lexers (>=0.0.5)", "sphinx (>=2.0.0)", "sphinxcontrib-autoprogram (>=0.1.5)", "towncrier (>=18.5.0)"]
testing = ["flaky (>=3.4.0)", "freezegun (>=0.3.11)", "pytest (>=4.0.0)", "pytest-cov (>=2.5.1)", "pytest-mock (>=1.10.0)", "pytest-randomly (>=1.0.0)", "psutil (>=5.6.1)", "pathlib2 (>=2.3.3)"]

[[package]]
name = "tox-poetry"
version = "0.4.1"
description = "Tox poetry plugin"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pluggy = "*"
toml = "*"
tox = {version = ">=3.7.0", markers = "python_version >= \"3\""}

[package.extras]
test = ["pylint", "pycodestyle", "pytest", "coverage"]

[[package]]
name = "tqdm"
version = "4.64.1"
description = "Fast, Extensible Progress Meter"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
dev = ["py-make (>=0.1.0)", "twine", "wheel"]
notebook = ["ipywidgets (>=6)"]
slack = ["slack-sdk"]
telegram = ["requests"]

[[package]]
name = "typing-extensions"
version = "4.4.0"
description = "Backported and Experimental Type Hints for Python 3.7+"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "urllib3"
version = "1.22"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = "*"

[package.extras]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "ipaddress"]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]

[[package]]
name = "virtualenv"
version = "20.16.5"
description = "Virtual Python Environment builder"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
distlib = ">=0.3.5,<1"
filelock = ">=3.4.1,<4"
platformdirs = ">=2.4,<3"

[package.extras]
docs = ["proselint (>=0.13)", "sphinx (>=5.1.1)", "sphinx-argparse (>=0.3.1)", "sphinx-rtd-theme (>=1)", "towncrier (>=21.9)"]
testing = ["coverage (>=6.2)", "coverage-enable-subprocess (>=1)", "flaky (>=3.7)", "packaging (>=21.3)", "pytest (>=7.0.1)", "pytest-env (>=0.6.2)", "pytest-freezegun (>=0.4.2)", "pytest-mock (>=3.6.1)", "pytest-randomly (>=3.10.3)", "pytest-timeout (>=2.1)"]

[[package]]
name = "wand"
version = "0.6.10"
description = "Ctypes-based simple MagickWand API binding for Python"
category = "main"
optional = false
python-versions = "*"

[package.extras]
doc = ["Sphinx (>=2.4.1)"]
test = ["pytest (>=5.3.5)"]

[metadata]
lock-version = "1.1"
python-versions = ">=3.8"
content-hash = "28f15ac73c4c58e917d77ee25bd575741be71721e2dddbde3a9a326a464f680e"

[metadata.files]
aggdraw = []
attrs = []
av = []
brotli = []
brotlicffi = []
certifi = []
cffi = []
charset-normalizer = []
colorama = []
contextlib2 = []
decorator = []
dill = []
distlib = []
docopt = []
execnet = []
filelock = []
idna = []
imageio = []
imageio-ffmpeg = []
inflate64 = []
iniconfig = []
json-tricks = []
mock = []
moviepy = []
multivolumefile = []
networkx = []
numpy = []
opencv-python = []
packaging = []
path = []
"path.py" = []
pillow = []
platformdirs = []
pluggy = []
proglog = []
psd-tools = []
psutil = []
py = []
py7zr = []
pybcj = []
pycparser = []
pycryptodomex = []
pymupdf = []
pyparsing = []
pypdf2 = []
pyppmd = []
pyside2 = []
pytest = []
pytest-shutil = []
pywavelets = []
pyzstd = []
rarfile = []
requests = []
scikit-image = []
scipy = []
send2trash = []
shiboken2 = []
six = []
termcolor = []
texttable = []
tifffile = []
tinytag = []
toml = []
tomli = []
tox = []
tox-poetry = []
tqdm = []
typing-extensions = []
urllib3 = []
virtualenv = []
wand = []
